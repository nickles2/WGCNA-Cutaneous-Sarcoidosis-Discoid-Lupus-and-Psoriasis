#install packages
install.packages(c("impute","dynamicTreeCut","qvalue","flashClust","Hmisc","WGCNA"))
y
y

#load transformed data
load("datExprA1p.RData")
load("datExprA2p.RData")

#correlating general network properties
install.packages("BiocManager")
BiocManager::install("WGCNA")
library(WGCNA) 
softPower = 10 # (Read WGCNA tutorial to learn how to pick your power)
rankExprA1= rank(rowMeans(datExprA1p))
rankExprA2= rank(rowMeans(datExprA2p))
random5000= sample(commonProbesA,5000)
rankConnA1= rank(softConnectivity(t(datExprA1p[random5000,]),type="signed",power=softPower))
rankConnA2= rank(softConnectivity(t(datExprA2p[random5000,]),type="signed",power=softPower))
rankExprB1= rank(rowMeans(datExprB1g))
rankExprB2= rank(rowMeans(datExprB2g))
random5000= sample(commonGenesB,5000)
rankConnB1= rank(softConnectivity(t(datExprB1g[random5000,]),type="signed",power=softPower))
rankConnB2= rank(softConnectivity(t(datExprB2g[random5000,]),type="signed",power=softPower))
pdf("generalNetworkProperties.pdf", height=10, width=9) 
par(mfrow=c(2,2))
verboseScatterplot(rankExprA1,rankExprA2, xlab="Ranked Expression (A1)",
                   ylab="Ranked Expression (A2)")
verboseScatterplot(rankConnA1,rankConnA2, xlab="Ranked Connectivity (A1)",
                   ylab="Ranked Connectivity (A2)")
verboseScatterplot(rankExprB1,rankExprB2, xlab="Ranked Expression (B1)",
                   ylab="Ranked Expression (B2)")
verboseScatterplot(rankConnB1,rankConnB2, xlab="Ranked Connectivity (B1)",
                   ylab="Ranked Connectivity (B2)")
dev.off() 

#run WGCNA on the datasets
keepGenesExpr = rank(-rowMeans(datExprA1p))<=5000
datExprA1g = datExprA1p[keepGenesExpr,]
datExprA2g = datExprA2p[keepGenesExpr,]
keepGenesDups = (collapseRows(datExprA1g,genesI,probesI))[[2]]
datExprA1g = datExprA1g[keepGenesDups[,2],]
datExprA2g = datExprA2g[keepGenesDups[,2],]
rownames(datExprA1g)<-rownames(datExprA2g)<-keepGenesDups[,1] 

adjacencyA1 = adjacency(t(datExprA1g),power=softPower,type="signed");
diag(adjacencyA1)=0
dissTOMA1 = 1-TOMsimilarity(adjacencyA1, TOMType="signed")
geneTreeA1 = flashClust(as.dist(dissTOMA1), method="average")
adjacencyA2 = adjacency(t(datExprA2g),power=softPower,type="signed");
diag(adjacencyA2)=0
dissTOMA2 = 1-TOMsimilarity(adjacencyA2, TOMType="signed")
geneTreeA2 = flashClust(as.dist(dissTOMA2), method="average")
save.image("tutorial.RData") # (Section will take ~5-15 minutes to run)
# NOTE: This file will be ~700GB and is not required, but if your computer crashes, you can type:
# ' load("tutorial.RData") ' to restart at this point.
Here is code to display the networks visually:
pdf("dendrogram.pdf",height=6,width=16)
par(mfrow=c(1,2))
plot(geneTreeA1,xlab="",sub="",main="Gene clustering on TOM-based dissimilarity (A1)",
labels=FALSE,hang=0.04);
plot(geneTreeA2,xlab="",sub="",main="Gene clustering on TOM-based dissimilarity (A2)",
labels=FALSE,hang=0.04);
dev.off()
If you now open 
